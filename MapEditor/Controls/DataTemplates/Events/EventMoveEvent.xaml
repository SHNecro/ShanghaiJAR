<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:events="clr-namespace:MapEditor.Models.Elements.Events"
                    xmlns:enums="clr-namespace:MapEditor.Models.Elements.Enums"
                    xmlns:markup="clr-namespace:MapEditor.Core.MarkupExtensions"
                    xmlns:validationrules="clr-namespace:MapEditor.Core.ValidationRules"
                    xmlns:controls="clr-namespace:MapEditor.Controls"
                    xmlns:local="clr-namespace:MapEditor">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/MapEditor;component/Controls/IconResources.xaml" />
        <ResourceDictionary Source="/MapEditor;component/Controls/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate DataType="{x:Type events:EventMoveEvent}">
        <Grid>
            <Grid.Resources>
                <FrameworkElement x:Key="EventMoveEventProxyElement" DataContext="{Binding}" />
            </Grid.Resources>
            <ContentControl Visibility="Collapsed"
                            Content="{StaticResource EventMoveEventProxyElement}"/>
            <StackPanel Orientation="Vertical">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn"/>
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0"
                               VerticalAlignment="Center"
                               Text="Target Type:"/>
                    <ComboBox Grid.Column="1"
                              ItemsSource="{markup:EnumBindingSource EnumType={x:Type enums:EventMoveTargetOption}}"
                              SelectedValue="{Binding IsMapIndexOption, Mode=TwoWay}" />
                </Grid>
                <ContentControl>
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsMapIndex}" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn"/>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0"
                                                           VerticalAlignment="Center"
                                                           Text="Target Map Index:"/>
                                                <controls:WheelCaptureIntegerUpDown Grid.Column="1" Minimum="-1">
                                                    <controls:WheelCaptureIntegerUpDown.Text>
                                                        <Binding Path="MapIndex" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                            <Binding.ValidationRules>
                                                                <validationrules:MinMaxValidationRule ValidationStep="RawProposedValue" Minimum="-1"/>
                                                            </Binding.ValidationRules>
                                                        </Binding>
                                                    </controls:WheelCaptureIntegerUpDown.Text>
                                                </controls:WheelCaptureIntegerUpDown>
                                                <Button Grid.Column="2"
                                                        Style="{StaticResource SelectObjectIndexButton}"
                                                        VerticalContentAlignment="Center"
                                                        Tag="{Binding MapIndex}"
                                                        Content="Go" />
                                                <Button Grid.Column="3"
                                                    Style="{StaticResource SetTagBindingButton}"
                                                    VerticalContentAlignment="Center"
                                                    Content="Set To Player"
                                                    Tag="{Binding MapIndex}"
                                                    CommandParameter="-1"/>
                                            </Grid>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsMapIndex}" Value="False">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn"/>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0"
                                                           VerticalAlignment="Center"
                                                           Text="Target ID:"/>
                                                <TextBox Grid.Column="1"
                                                         VerticalContentAlignment="Center"
                                                         Height="22"
                                                         Text="{Binding ObjectID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <Button Grid.Column="2"
                                                        Style="{StaticResource SelectObjectButton}"
                                                        VerticalContentAlignment="Center"
                                                        Tag="{Binding ObjectID}"
                                                        Content="Go" />
                                                <Button Grid.Column="3"
                                                        Style="{StaticResource SetTagBindingButton}"
                                                        VerticalContentAlignment="Center"
                                                        Content="Set To Player"
                                                        Tag="{Binding ObjectID}"
                                                        CommandParameter="プレイヤー" />
                                            </Grid>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
                <controls:StringEditableExpander Header="Movement"
                                                 IsExpanded="True"
                                                 DataContext="{Binding Moves}">
                    <StackPanel Margin="10,0,0,0"
                                Orientation="Vertical">
                        <StackPanel.Resources>
                            <FrameworkElement x:Key="MovesProxyElement" DataContext="{Binding}" />
                        </StackPanel.Resources>
                        <ContentControl Visibility="Collapsed"
                                        Content="{StaticResource MovesProxyElement}"/>
                        <controls:StringEditableExpander IsExpanded="True"
                                                         DataContext="{Binding SelectedMove}">
                            <controls:StringEditableExpander.Style>
                                <Style TargetType="controls:StringEditableExpander">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding DataContext.Moves.Count, Source={StaticResource MovesProxyElement}}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:StringEditableExpander.Style>
                            <controls:StringEditableExpander.Header>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               Text="{Binding StringValue}"
                                               TextTrimming="CharacterEllipsis"
                                               ToolTip="{Binding StringValue}" />
                                    <Button Grid.Column="1" Command="{x:Static local:Constants.DuplicateItemCommand}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                                <Binding Path="DataContext.Moves" Source="{StaticResource MovesProxyElement}" />
                                                <Binding Path="." />
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                        <Rectangle Width="16" Height="16"  Fill="{StaticResource DuplicateIcon}" />
                                    </Button>
                                </Grid>
                            </controls:StringEditableExpander.Header>
                            <StackPanel Margin="10,0,0,0"
                                        Orientation="Vertical">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn"/>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                               VerticalAlignment="Center"
                                               Text="Type:"/>
                                    <ComboBox Grid.Column="1"
                                              ItemsSource="{markup:EnumBindingSource EnumType={x:Type enums:MoveCategoryOption}}"
                                              SelectedValue="{Binding Category, Mode=TwoWay}" />
                                </Grid>
                                <ContentControl DataContext="{Binding}">
                                    <ContentControl.Style>
                                        <Style TargetType="ContentControl">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Category}" Value="Walk">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0"
                                                                           VerticalAlignment="Center"
                                                                           Text="Direction:" />
                                                                <UniformGrid Grid.Column="1" Rows="2" Columns="2"
                                                                             HorizontalAlignment="Right">
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleWestArrowIcon}"
                                                                                 ToolTip="West"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WalkLeft}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleNorthArrowIcon}"
                                                                                 ToolTip="North"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WalkUp}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleSouthArrowIcon}"
                                                                                 ToolTip="South"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WalkDown}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleEastArrowIcon}"
                                                                                 ToolTip="East"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WalkRight}}" />
                                                                </UniformGrid>
                                                                <StackPanel Grid.Column="2"
                                                                            Orientation="Vertical"
                                                                            VerticalAlignment="Center">
                                                                    <TextBlock VerticalAlignment="Center"
                                                                               HorizontalAlignment="Center"
                                                                               Text="Distance:"/>
                                                                    <controls:WheelCaptureIntegerUpDown Minimum="0">
                                                                        <controls:WheelCaptureIntegerUpDown.Text>
                                                                            <Binding Path="Distance" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                                                <Binding.ValidationRules>
                                                                                    <validationrules:MinMaxValidationRule ValidationStep="RawProposedValue" Minimum="0"/>
                                                                                </Binding.ValidationRules>
                                                                            </Binding>
                                                                        </controls:WheelCaptureIntegerUpDown.Text>
                                                                    </controls:WheelCaptureIntegerUpDown>
                                                                </StackPanel>
                                                            </Grid>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Category}" Value="Warp">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0"
                                                                           VerticalAlignment="Center"
                                                                           Text="Direction:" />
                                                                <UniformGrid Grid.Column="1" Rows="2" Columns="2"
                                                                             HorizontalAlignment="Right">
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleWestArrowIcon}"
                                                                                 ToolTip="West"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WarpLeft}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleNorthArrowIcon}"
                                                                                 ToolTip="North"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WarpUp}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleSouthArrowIcon}"
                                                                                 ToolTip="South"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WarpDown}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleEastArrowIcon}"
                                                                                 ToolTip="East"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.WarpRight}}" />
                                                                </UniformGrid>
                                                                <StackPanel Grid.Column="2"
                                                                            Orientation="Vertical"
                                                                            VerticalAlignment="Center">
                                                                    <TextBlock HorizontalAlignment="Center"
                                                                               Text="Distance:"/>
                                                                    <controls:WheelCaptureIntegerUpDown Minimum="0">
                                                                        <controls:WheelCaptureIntegerUpDown.Text>
                                                                            <Binding Path="Distance" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                                                <Binding.ValidationRules>
                                                                                    <validationrules:MinMaxValidationRule ValidationStep="RawProposedValue" Minimum="0"/>
                                                                                </Binding.ValidationRules>
                                                                            </Binding>
                                                                        </controls:WheelCaptureIntegerUpDown.Text>
                                                                    </controls:WheelCaptureIntegerUpDown>
                                                                </StackPanel>
                                                            </Grid>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Category}" Value="Angle">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn" />
                                                                    <ColumnDefinition Width="Auto" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0"
                                                                           VerticalAlignment="Center"
                                                                           Text="Direction:" />
                                                                <UniformGrid Grid.Column="1" Rows="2" Columns="2"
                                                                                HorizontalAlignment="Right">
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleWestArrowIcon}"
                                                                                 ToolTip="West"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.AngleLeft}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleNorthArrowIcon}"
                                                                                 ToolTip="North"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.AngleUp}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleSouthArrowIcon}"
                                                                                 ToolTip="South"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.AngleDown}}" />
                                                                    <RadioButton Style="{StaticResource AngleIconRadioButton}"
                                                                                 Tag="{StaticResource AngleEastArrowIcon}"
                                                                                 ToolTip="East"
                                                                                 IsChecked="{Binding Path=Type, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:MoveType.AngleRight}}" />
                                                                </UniformGrid>
                                                                <StackPanel Grid.Column="2"
                                                                            Orientation="Vertical"
                                                                            VerticalAlignment="Center">
                                                                    <TextBlock HorizontalAlignment="Center"
                                                                               Text="Duration:"/>
                                                                    <controls:WheelCaptureIntegerUpDown Minimum="0">
                                                                        <controls:WheelCaptureIntegerUpDown.Text>
                                                                            <Binding Path="Distance" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                                                <Binding.ValidationRules>
                                                                                    <validationrules:MinMaxValidationRule ValidationStep="RawProposedValue" Minimum="0"/>
                                                                                </Binding.ValidationRules>
                                                                            </Binding>
                                                                        </controls:WheelCaptureIntegerUpDown.Text>
                                                                    </controls:WheelCaptureIntegerUpDown>
                                                                </StackPanel>
                                                            </Grid>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Category}" Value="Wait">
                                                    <Setter Property="Content">
                                                        <Setter.Value>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ObjectLabelColumn" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0"
                                                                           VerticalAlignment="Center"
                                                                           Text="Ticks:" />
                                                                <controls:WheelCaptureIntegerUpDown Grid.Column="1"
                                                                                    Minimum="0">
                                                                    <controls:WheelCaptureIntegerUpDown.Text>
                                                                        <Binding Path="Distance" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                                                            <Binding.ValidationRules>
                                                                                <validationrules:MinMaxValidationRule ValidationStep="RawProposedValue" Minimum="0"/>
                                                                            </Binding.ValidationRules>
                                                                        </Binding>
                                                                    </controls:WheelCaptureIntegerUpDown.Text>
                                                                </controls:WheelCaptureIntegerUpDown>
                                                            </Grid>
                                                        </Setter.Value>
                                                    </Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentControl.Style>
                                </ContentControl>
                            </StackPanel>
                        </controls:StringEditableExpander>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0"
                                       VerticalAlignment="Center"
                                       Text="Movement:"
                                       FontWeight="Bold" />
                            <Button Grid.Column="1" Command="{x:Static local:Constants.DuplicateItemCommand}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                        <Binding Path="Moves" />
                                        <Binding Path="SelectedMove" />
                                    </MultiBinding>
                                </Button.CommandParameter>
                                <Rectangle Width="16" Height="16"  Fill="{StaticResource DuplicateIcon}" />
                            </Button>
                            <Button Grid.Column="2" Command="{x:Static local:Constants.AddItemCommand}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                        <Binding Path="Moves" />
                                        <Binding Source="{x:Static local:Constants.MoveCreator}" />
                                        <Binding Path="SelectedMove" />
                                    </MultiBinding>
                                </Button.CommandParameter>
                                <Rectangle Width="16" Height="16"  Fill="{StaticResource AddIcon}" />
                            </Button>
                        </Grid>
                        <TextBlock HorizontalAlignment="Center"
                                   Text="No Movement">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Moves.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <ListBox HorizontalContentAlignment="Stretch"
                                 MaxHeight="150"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 SelectionMode="Single"
                                 ItemsSource="{Binding DataContext.Moves, Source={StaticResource MovesProxyElement}}"
                                 SelectedValue="{Binding DataContext.SelectedMove, Delay=100, Source={StaticResource MovesProxyElement}}"
                                 ItemTemplate="{StaticResource MapEventPageMovesListTemplate}"
                                 ItemContainerStyle="{StaticResource MoveContainerStyle}"
                                 DataContext="{Binding DataContext, Source={StaticResource EventMoveEventProxyElement}}">
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Moves.Moves.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="Visibility" Value="Visible"/>
                                </Style>
                            </ListBox.Style>
                            <ListBox.InputBindings>
                                <KeyBinding Modifiers="Alt"
                                            Key="Up"
                                            Command="{x:Static local:Constants.MoveItemUpCommand}">
                                    <KeyBinding.CommandParameter>
                                        <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                            <Binding Path="Moves.Moves" />
                                            <Binding Path="SelectedValue" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBox}" />
                                        </MultiBinding>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Modifiers="Alt"
                                            Key="Down"
                                            Command="{x:Static local:Constants.MoveItemDownCommand}">
                                    <KeyBinding.CommandParameter>
                                        <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                            <Binding Path="Moves.Moves" />
                                            <Binding Path="SelectedValue" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBox}" />
                                        </MultiBinding>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Key="Delete"
                                            Command="{x:Static local:Constants.DeleteItemCommand}">
                                    <KeyBinding.CommandParameter>
                                        <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                            <Binding Path="Moves.Moves" />
                                            <Binding Path="SelectedValue" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBox}" />
                                        </MultiBinding>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Modifiers="Shift"
                                            Key="Delete"
                                            Command="{x:Static local:Constants.DeleteItemCommand}">
                                    <KeyBinding.CommandParameter>
                                        <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                            <Binding Path="Moves.Moves" />
                                            <Binding Path="SelectedValue" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBox}" />
                                        </MultiBinding>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                                <KeyBinding Modifiers="Ctrl"
                                            Key="D"
                                            Command="{x:Static local:Constants.DuplicateItemCommand}">
                                    <KeyBinding.CommandParameter>
                                        <MultiBinding Converter="{StaticResource BindingsToArrayMultiConverter}">
                                            <Binding Path="Moves.Moves" />
                                            <Binding Path="SelectedValue" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=ListBox}" />
                                        </MultiBinding>
                                    </KeyBinding.CommandParameter>
                                </KeyBinding>
                            </ListBox.InputBindings>
                        </ListBox>
                    </StackPanel>
                </controls:StringEditableExpander>
                <StackPanel Orientation="Vertical">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Moves.Moves.Count}" Value="0">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible"/>
                        </Style>
                    </StackPanel.Style>
                </StackPanel>
            </StackPanel>
        </Grid>
    </DataTemplate>
</ResourceDictionary>