<UserControl x:Class="MapEditor.Views.WalkableMapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MapEditor"
             xmlns:validationrules="clr-namespace:MapEditor.Core.ValidationRules"
             xmlns:core="clr-namespace:MapEditor.Core"
             xmlns:enums="clr-namespace:MapEditor.Models.Elements.Enums"
             xmlns:controls="clr-namespace:MapEditor.Controls"
             xmlns:converters="clr-namespace:MapEditor.Core.Converters"
             xmlns:markup="clr-namespace:MapEditor.Core.MarkupExtensions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MapEditor;component/Controls/IconResources.xaml" />
                <ResourceDictionary Source="/MapEditor;component/Controls/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <FrameworkElement x:Key="CurrentMapProxyElement" DataContext="{Binding}"/>
            <converters:ObjectEqualityBooleanConverter x:Key="ObjectEqualityBooleanConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ContentControl Visibility="Collapsed" Content="{StaticResource CurrentMapProxyElement}"/>
        <controls:StringEditableExpander Header="Walkable Map"
                                         IsExpanded="True"
                                         DataContext="{Binding WalkableMap}">
            <ScrollViewer VerticalScrollBarVisibility="Auto"
                          Margin="10,0,0,0">
                <StackPanel Orientation="Vertical"
                            HorizontalAlignment="Left"
                            DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=local:MainWindow}}">
                    <StackPanel Orientation="Horizontal"
                                Margin="6"
                                HorizontalAlignment="Center">
                        <TextBlock Text="Level:" />
                        <controls:WheelCaptureIntegerUpDown HorizontalAlignment="Center"
                                            Margin="10,0,0,0"
                                            MinWidth="50"
                                            IsEnabled="{Binding Path=CurrentTool, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static core:EditToolType.DrawTool}}"
                                            Minimum="0" Maximum="{Binding CurrentMap.Header.Levels, Converter={StaticResource NumberToOffsetNumberConverter}, ConverterParameter=-1}">
                            <controls:WheelCaptureIntegerUpDown.Text>
                                <Binding Path="CurrentLevel" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validationrules:MinMaxBindingValidationRule ValidationStep="RawProposedValue">
                                            <validationrules:MinMaxBindingValidationRule.Bounds>
                                                <core:MinMaxBinding Minimum="0"  Maximum="{Binding DataContext.Header.Levels, Source={StaticResource CurrentMapProxyElement}}" MaxInclusive="False" />
                                            </validationrules:MinMaxBindingValidationRule.Bounds>
                                        </validationrules:MinMaxBindingValidationRule>
                                    </Binding.ValidationRules>
                                </Binding>
                            </controls:WheelCaptureIntegerUpDown.Text>
                        </controls:WheelCaptureIntegerUpDown>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapFullTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.Full}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapEmptyTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.Empty}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapBottomLeftSlantMajorityTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.BottomLeftSlantMajority}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapTopRightSlantMajorityTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.TopRightSlantMajority}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapTopLeftSlantMajorityTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.TopLeftSlantMajority}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapBottomRightSlantMajorityTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.BottomRightSlantMajority}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapTopRightSlantFillerTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.TopRightSlantFiller}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapBottomLeftSlantFillerTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.BottomLeftSlantFiller}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapBottomRightSlantFillerTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.BottomRightSlantFiller}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapTopLeftSlantFillerTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.TopLeftSlantFiller}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapUpDownRampBottomTileIcon}"
                                                         IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.UpDownRampBottom}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapUpDownRampTopTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.UpDownRampTop}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapUpRampTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.UpRamp}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapDownRampTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.DownRamp}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapLeftRightRampBottomTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.LeftRightRampBottom}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapLeftRightRampTopTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.LeftRightRampTop}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapLeftRampTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.LeftRamp}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapRightRampTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.RightRamp}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapConveyorNorthTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.ConveyorNorth}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapConveyorSouthTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.ConveyorSouth}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapConveyorWestTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.ConveyorWest}}"/>
                        <RadioButton Style="{StaticResource TileIconRadioButton}" Tag="{StaticResource MapConveyorEastTileIcon}"
                                     IsChecked="{Binding Path=SelectedTile, Converter={StaticResource ObjectEqualityBooleanConverter}, ConverterParameter={x:Static enums:WalkableTileType.ConveyorEast}}"/>
                    </StackPanel>
                    <StackPanel Orientation="Vertical"
                                Margin="6"
                                HorizontalAlignment="Center">
                        <CheckBox Height="22"
                                  VerticalContentAlignment="Center"
                                  IsChecked="{Binding IsPlacingConveyors, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Content="Place Conveyors?" />
                        <ComboBox Height="22"
                                  ItemsSource="{Binding Source={markup:EnumBindingSourceExtension {x:Type enums:ConveyorColorType}}}"
                                  SelectedItem="{Binding ConveyorColor, ConverterParameter={x:Type enums:ConveyorColorType}}">
                            <ComboBox.Style>
                                <Style TargetType="ComboBox">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsPlacingConveyors}" Value="True">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                    <Setter Property="IsEnabled" Value="False" />
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </controls:StringEditableExpander>
    </Grid>
</UserControl>
