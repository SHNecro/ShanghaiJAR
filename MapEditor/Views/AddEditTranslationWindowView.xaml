<Window x:Class="MapEditor.Views.AddEditTranslationWindowView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:MapEditor.Core.Converters"
        xmlns:markup="clr-namespace:MapEditor.Core.MarkupExtensions"
        xmlns:rendering="clr-namespace:MapEditor.Rendering"
        xmlns:common="clr-namespace:Common;assembly=ShanghaiEXE"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="420" Width="515">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/MapEditor;component/Controls/IconResources.xaml" />
                <ResourceDictionary Source="/MapEditor;component/Controls/Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <converters:EnteredTextToAlternateStringConverter x:Key="EnteredTextToAlternateStringConverter" />
            <converters:ConverterGroup x:Key="EnteredTextToUntranslatedAlternateStringConverter">
                <converters:EnteredTextToAlternateStringConverter />
                <converters:UntranslatedStringConverter />
            </converters:ConverterGroup>

            <FrameworkElement x:Key="AddEditTranslationWindowViewModelProxy" DataContext="{Binding}" />
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="5">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ContentControl Visibility="Collapsed" Content="{StaticResource AddEditTranslationWindowViewModelProxy}"/>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                               VerticalAlignment="Center"
                               Text="Key:"/>
                <TextBox Grid.Column="1"
                         Margin="5,0"
                         Text="{Binding Key, Mode=TwoWay}" />
                <CheckBox Grid.Column="2"
                          VerticalContentAlignment="Center"
                          Content="Update Key"
                          IsChecked="{Binding IsEditingKey, Mode=TwoWay}">
                    <CheckBox.Style>
                        <Style TargetType="CheckBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsAddingNewKey}" Value="True">
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="IsEnabled" Value="True" />
                        </Style>
                    </CheckBox.Style>
                </CheckBox>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="LocaleLabelColumn" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0"
                              IsChecked="{Binding IsDialogue}"
                              VerticalContentAlignment="Center"
                              Content="Is Dialogue" />
                <CheckBox Grid.Column="1"
                              IsChecked="{Binding IsFormattingText}"
                              VerticalContentAlignment="Center"
                              HorizontalAlignment="Right"
                              Content="Format Text" />
            </Grid>
            <StackPanel Grid.Row="2"
                        Orientation="Vertical">
                <ScrollViewer Grid.Row="2"
                              HorizontalScrollBarVisibility="Auto"
                              VerticalScrollBarVisibility="Auto"
                              Background="Black"
                              MinWidth="50"
                              MinHeight="50">
                    <ScrollViewer.Style>
                        <Style TargetType="ScrollViewer">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding DataContext.IsDialogue, Source={StaticResource AddEditTranslationWindowViewModelProxy}}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Visibility" Value="Visible" />
                        </Style>
                    </ScrollViewer.Style>
                    <ContentControl HorizontalAlignment="Center"
                                    MinWidth="240"
                                    MinHeight="56"
                                    Content="{x:Static rendering:AddEditTranslationRenderer.DialogueControlHost}"/>
                </ScrollViewer>
                <DockPanel LastChildFill="False">
                    <Button DockPanel.Dock="Right"
                            Content="-"
                            Width="18"
                            Command="{x:Static rendering:AddEditTranslationRenderer.ZoomOutCommand}" />
                    <Button DockPanel.Dock="Right"
                            Content="+"
                            Width="18"
                            Command="{x:Static rendering:AddEditTranslationRenderer.ZoomInCommand}" />
                    <StackPanel DockPanel.Dock="Left"
                                Orientation="Horizontal"
                                ToolTipService.ShowDuration="99999">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DataContext.IsDialogue, Source={StaticResource AddEditTranslationWindowViewModelProxy}}" Value="False">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                                <Setter Property="Visibility" Value="Visible" />
                            </Style>
                        </StackPanel.Style>
                        <StackPanel.ToolTip>
                            <ToolTip MaxWidth="2000">
                                <TextBlock>
                                Certain text sequences in dialogues trigger ingame events or alter the text flow.<LineBreak /> 
                                They are invoked through "#&lt;type&gt;@&lt;arg&gt;#", ex. "#w@20#" to wait 20 frames.<LineBreak /> 
                                The types of commands are:<LineBreak /> 
                                • s: Play the sound effect given by &lt;arg&gt;, ex. "#s@chain#Whoosh!"<LineBreak /> 
                                • w: Wait for the given number of frames &lt;arg&gt;, ex. "Ten!#w@60# Nine!"<LineBreak /> 
                                • b: Enable/disable user input/fastforward &lt;arg&gt;, ex. "#b@true#....#b@false# Done!"<LineBreak /> 
                                • u: Saves the game (no args), ex. "Saving....#u@# Done!"<LineBreak /> 
                                • e: Ends the dialogue immediately (no args), ex. "Wait just a--#e@#"<LineBreak /> 
                                • p: (new) Runs an event (id given by &lt;arg&gt;) parallel to the text, ex. "Red#p@FadeRed# Blue#p@FadeBlue#"<LineBreak /> 
                                • v: Replaces sequence with the var given by &lt;arg&gt;, ex. "#v@20# HeatData remaining!"<LineBreak /> 
                                • i: Replaces sequence with the last opened item &lt;arg&gt;, ex. "Shanghai got battlechip #i@#"<LineBreak /> 
                                • c: Replaces sequence with the type of the last opened item &lt;arg&gt;, ex. "Shanghai got #c@#"
                                </TextBlock>
                            </ToolTip>
                        </StackPanel.ToolTip>
                        <Grid DockPanel.Dock="Right"
                              Width="16"
                              Height="16"
                              Background="{StaticResource InfoIcon}"/>
                        <TextBlock Margin="4,0" Text="Info about command sequences" Opacity="0.56" />
                    </StackPanel>
                </DockPanel>
            </StackPanel>
            <ScrollViewer Grid.Row="3"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto">
                <ListBox Grid.IsSharedSizeScope="True"
                         HorizontalContentAlignment="Stretch"
                         ItemsSource="{Binding TranslationEntries}"
                         SelectedValue="{Binding CurrentEntry}"
                         SelectedValuePath="TranslationEntry">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="LocaleLabelColumn" />
                                    <ColumnDefinition Width="*" MinWidth="200" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0"
                                            Margin="0,0,10,0"
                                            Orientation="Vertical"
                                            VerticalAlignment="Center">
                                    <TextBlock FontWeight="Bold"
                                               Text="{Binding Locale}"
                                               HorizontalAlignment="Center"/>
                                    <DockPanel LastChildFill="True">
                                        <Button DockPanel.Dock="Right"
                                                Width="32"
                                                Content="..."
                                                Tag="{Binding FilePath}"
                                                Click="SetFilePath" />
                                        <TextBox DockPanel.Dock="Right"
                                                 MaxWidth="150"
                                                 IsEnabled="False"
                                                 ToolTipService.ShowOnDisabled="True"
                                                 ToolTip="{Binding FilePath}"
                                                 Text="{Binding FilePath}" />
                                    </DockPanel>
                                </StackPanel>

                                <Grid Grid.Column="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="60" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0"
                                          Height="60">
                                        <xctk:WatermarkTextBox AcceptsReturn="True"
                                                               TextWrapping="NoWrap">
                                            <xctk:WatermarkTextBox.Style>
                                                <Style TargetType="xctk:WatermarkTextBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding DataContext.IsFormattingText, Source={StaticResource AddEditTranslationWindowViewModelProxy}}" Value="True">
                                                            <Setter Property="Text" Value="{Binding Text, Converter={StaticResource EnteredTextToAlternateStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                                                            <Setter Property="Watermark" Value="{Binding DataContext.FirstEnteredTranslation.Text, Converter={StaticResource EnteredTextToUntranslatedAlternateStringConverter}, Source={StaticResource AddEditTranslationWindowViewModelProxy}}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Text" Value="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                                </Style>
                                            </xctk:WatermarkTextBox.Style>
                                        </xctk:WatermarkTextBox>
                                        <Button HorizontalAlignment="Right"
                                                VerticalAlignment="Top"
                                                Tag="{Binding Text}"
                                                CommandParameter="{x:Null}">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource SetTagBindingButton}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </Style>
                                            </Button.Style>
                                            <Rectangle Width="16" Height="16"  Fill="{StaticResource DeleteIcon}" />
                                        </Button>
                                    </Grid>
                                    <StackPanel Grid.Row="1"
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Right">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding DataContext.IsDialogue, Source={StaticResource AddEditTranslationWindowViewModelProxy}}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </StackPanel.Style>
                                        <ComboBox ItemsSource="{Binding Source={markup:EnumBindingSourceExtension {x:Type common:FACE}}}">
                                            <ComboBox.Style>
                                                <Style TargetType="ComboBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                                                            <Setter Property="SelectedValue" Value="{Binding DataContext.FirstEnteredTranslation.Face, Source={StaticResource AddEditTranslationWindowViewModelProxy}}" />
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="SelectedValue" Value="{Binding Face}" />
                                                </Style>
                                            </ComboBox.Style>
                                        </ComboBox>
                                        <CheckBox Content="Monochrome">
                                            <CheckBox.Style>
                                                <Style TargetType="CheckBox">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Text}" Value="{x:Null}">
                                                            <Setter Property="IsChecked" Value="{Binding DataContext.FirstEnteredTranslation.IsMono, Source={StaticResource AddEditTranslationWindowViewModelProxy}}" />
                                                            <Setter Property="IsEnabled" Value="False" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="IsChecked" Value="{Binding IsMono}" />
                                                </Style>
                                            </CheckBox.Style>
                                        </CheckBox>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </ScrollViewer>
        </Grid>
        <DockPanel Grid.Row="1">
            <Button Content="Apply"
                    Command="{Binding ApplyChangesCommand}"/>
        </DockPanel>
    </Grid>
</Window>
